generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ShotBoundary {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  stashappSceneId Int      @map("stashapp_scene_id")

  startTime       Decimal  @map("start_time")
  endTime         Decimal  @map("end_time")

  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@index([stashappSceneId, startTime])
  @@map("shot_boundaries")
}

model Marker {
  id                Int      @id @default(autoincrement())
  stashappMarkerId  Int?     @unique @map("stashapp_marker_id")
  stashappSceneId   Int      @map("stashapp_scene_id")
  title             String
  seconds           Decimal
  endSeconds        Decimal? @map("end_seconds")
  primaryTagId      Int?     @map("primary_tag_id")

  lastSyncedAt      DateTime? @map("last_synced_at")
  lastExportedAt    DateTime? @map("last_exported_at")
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @updatedAt @map("updated_at")

  markerTags        MarkerTag[]

  @@index([stashappSceneId])
  @@index([stashappMarkerId])
  @@map("markers")
}

model MarkerTag {
  id         Int      @id @default(autoincrement())
  markerId   Int      @map("marker_id")
  tagId      Int      @map("tag_id")
  isPrimary  Boolean  @default(false) @map("is_primary")

  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  marker     Marker   @relation(fields: [markerId], references: [id], onDelete: Cascade)

  @@unique([markerId, tagId])
  @@index([tagId])
  @@map("marker_tags")
}
